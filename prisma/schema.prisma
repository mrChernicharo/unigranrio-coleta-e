// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}


model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text()
  access_token       String?  @db.Text()
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text()
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  points CollectionPoint[]

}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}


model CollectionPoint {
  id String @id @default(cuid())
  name String
  lat Float
  lng Float
  address String
  phone String @db.VarChar(15)
  email String @db.VarChar(80)
  image String @db.LongText()
  typesOfWaste String @db.Char(4) @default("S_I_")
  authorId String
  author User @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
}